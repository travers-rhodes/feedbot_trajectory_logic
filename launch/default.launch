<?xml version="1.0"?>
<launch>
  <arg name="sim" default="true"/>
  <arg name="speedup_factor" default="0.5"/>
  
  <arg name="robot_type" default="$(eval 'sim' if arg('sim') else 'ur5')"/>
  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find feedbot_trajectory_logic)/config/ur5_default.rviz" /> 

  <node name="move_to_pose_service" pkg="feedbot_trajectory_logic" type="move_to_pose_service" respawn="false" output="screen">
    <!--launch-prefix="/home/travers/run_tmux.sh">-->
    <rosparam command="load"
              file="$(find ur5_e_moveit_config)/config/kinematics.yaml"/>
    <param name="step_size_meters" type="double" value="0.01"/>
    <param name="robot_type" type="string" value="$(arg robot_type)"/>
    <!-- values less than 1 slow down motions -->
    <param name="speedup_factor" value="$(arg speedup_factor)"/>
  </node>


  <group if="$(arg sim)">
    <!-- Load universal robot description format (URDF) -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ur_e_description)/urdf/ur5e_joint_limited_robot.urdf.xacro'" />
    <include file="$(find ur5_e_moveit_config)/launch/move_group.launch">
      <arg name="allow_trajectory_execution" value="true"/>
      <arg name="fake_execution" value="true"/>
      <arg name="info" value="true"/>
    </include>
    <!-- We do not have a robot connected, so publish fake joint states -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="use_gui" value="false"/>
      <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    </node>
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_st_pub"/>
  </group>
  
  <group unless="$(arg sim)">
    <include file="$(find ur_robot_driver)/launch/ur5e_bringup.launch">
    </include>
    <!-- launch video stream -->
  </group>

  <node name="move_the_robot" pkg="feedbot_trajectory_logic" type="move_poses.py"/>

</launch>
