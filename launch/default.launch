<launch>
  <arg name="simulate_spoon" default="true"/>
  <arg name="follow_mouth" default="false"/>
  <arg name="calibrate_only" default="false"/>
  <arg name="just_follow_mouth" default="false"/>

  <include file="$(find gen3_robotiq_2f_85_move_it_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include> 
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_st_pub"/>

  <node name="move_to_pose_service" pkg="feedbot_trajectory_logic" type="move_to_pose_service" respawn="false" output="screen">
    <!--launch-prefix="/home/travers/run_tmux.sh">-->
    <rosparam command="load"
              file="$(find gen3_robotiq_2f_85_move_it_config)/config/kinematics.yaml"/>
    <param name="step_size_meters" type="double" value="0.01"/>
    <param name="robot_type" type="string" value="gen3_rviz"/>
  </node>

  <node name="move_poses" pkg="feedbot_trajectory_logic" type="move_poses.py" unless="$(arg calibrate_only)"> 
  </node>

  <node name="fake_follow_joint_trajectory" pkg="feedbot_trajectory_logic" type="fake_follow_joint_trajectory.py" output="screen"/> 
  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
    <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
  </node>
  
  <!-- Run the main MoveIt! executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find gen3_robotiq_2f_85_move_it_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
  </include>


</launch>
